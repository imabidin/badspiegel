services:
  # MariaDB Datenbank
  db:
    image: mariadb:10.8
    container_name: wordpress-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_NAME:-wordpress}
      MYSQL_USER: ${DB_USER:-wordpress}
      MYSQL_PASSWORD: ${DB_PASSWORD:-wordpress_password}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root_password}
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./config/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - wordpress-network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '2.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # WordPress
  wordpress:
    build: . # Verwendet unser Dockerfile mit Xdebug
    container_name: wordpress-app
    restart: unless-stopped
    user: "1000:1000" # Verwende deine User ID und Group ID
    depends_on:
      - db
      - redis
    environment:
      WORDPRESS_DB_HOST: ${DB_HOST:-db}:${DB_PORT:-3306}
      WORDPRESS_DB_NAME: ${DB_NAME:-wordpress}
      WORDPRESS_DB_USER: ${DB_USER:-wordpress}
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD:-wordpress_password}
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_REDIS_HOST', '${REDIS_HOST:-redis}');
        define('WP_REDIS_PORT', ${REDIS_PORT:-6379});
        define('WP_REDIS_TIMEOUT', 1);
        define('WP_REDIS_READ_TIMEOUT', 1);
        define('WP_REDIS_DATABASE', ${REDIS_DB:-0});
        define('WP_DEBUG', ${WP_DEBUG:-true});
        define('WP_DEBUG_LOG', ${WP_DEBUG_LOG:-true});
        define('WP_DEBUG_DISPLAY', ${WP_DEBUG_DISPLAY:-false});
        define('SCRIPT_DEBUG', ${SCRIPT_DEBUG:-true});
        define('WP_MEMORY_LIMIT', '${WP_MEMORY_LIMIT:-512M}');
    volumes:
      - ./wordpress:/var/www/html
      - ./config/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
      - ./config/php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./config/php/opcache-smart-dev.ini:/usr/local/etc/php/conf.d/zz-opcache-custom.ini
      - ./config/php/xhprof.ini:/usr/local/etc/php/conf.d/xhprof.ini
      - ./config/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - ./logs/wordpress:/var/log/wordpress
    networks:
      - wordpress-network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '2.0'
        reservations:
          memory: 256M
          cpus: '0.5'

  # Nginx Webserver
  nginx:
    image: nginx:alpine
    container_name: wordpress-nginx
    restart: unless-stopped
    depends_on:
      - wordpress
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./wordpress:/var/www/html:ro
      - ./config/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./config/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    networks:
      - wordpress-network

  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    restart: unless-stopped
    depends_on:
      - db
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: root_password
      MYSQL_ROOT_PASSWORD: root_password
    networks:
      - wordpress-network

  # Redis f端r Caching
  redis:
    image: redis:7-alpine
    container_name: wordpress-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory ${REDIS_MAXMEMORY:-512mb} --maxmemory-policy allkeys-lru
    volumes:
      - ./data/redis:/data
    networks:
      - wordpress-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'

  # MailHog f端r E-Mail Testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: wordpress-mailhog
    restart: unless-stopped
    ports:
      - "${MAILHOG_SMTP_PORT:-1025}:1025"
      - "${MAILHOG_WEB_PORT:-8025}:8025"
    networks:
      - wordpress-network

  # WP-CLI f端r WordPress Management
  wp-cli:
    image: wordpress:cli-php8.2
    container_name: wp-cli
    depends_on:
      - db
      - wordpress
    environment:
      WORDPRESS_DB_HOST: ${DB_HOST:-db}:${DB_PORT:-3306}
      WORDPRESS_DB_NAME: ${DB_NAME:-wordpress}
      WORDPRESS_DB_USER: ${DB_USER:-wordpress}
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD:-wordpress_password}
    volumes:
      - ./wordpress:/var/www/html
    working_dir: /var/www/html
    networks:
      - wordpress-network
    profiles:
      - cli

  # Python Tools f端r Datenverarbeitung und Automatisierung
  python-tools:
    build:
      context: .
      dockerfile: Dockerfile.python
    container_name: badspiegel-python
    depends_on:
      - db
    environment:
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-3306}
      DB_NAME: ${DB_NAME:-wordpress}
      DB_USER: ${DB_USER:-wordpress}
      DB_PASSWORD: ${DB_PASSWORD:-wordpress_password}
    volumes:
      - ./scripts:/app/scripts
      - ./wordpress:/app/wordpress:ro
      - ./data:/app/data
      - ./backups:/app/backups
      - ./logs:/app/logs
    working_dir: /app
    networks:
      - wordpress-network
    profiles:
      - tools

networks:
  wordpress-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
